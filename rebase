#!/bin/bash

repo="clouway/tgps" # SET YOUR REPOSITORY HERE

## SET TERMINAL COLORS
dr='\033[0;31m' # dark red
r='\033[1;31m' # light red
dg='\033[0;32m' # dark green
g='\033[1;32m' # light green
b='\033[1;34m' # blue
y='\033[1;33m' # yellow
c='\033[0;36m' # cyan
nc='\033[0m' # no color

## STEP 1: exit if outside git repository
git rev-parse 2> /dev/null; [ $? != 0 ] && 
  echo && 
  echo -e "${r}Error: ${y}`pwd`${r} is not a git repository! ${nc}Please, run me in your project folder." && 
  echo && 
  exit 1

## STEP 2: exit if repository name is not found | set user/host/folder | display the current branch and upstream
user_host=`echo $USER`@`hostname`

current_dir="/`pwd | awk -F'/' '{print $2}'`/.../`pwd | awk -F'/' '{print $NF}'`"

branch=$(git rev-parse --abbrev-ref HEAD)

upstream=$(git remote -v | grep -m 1 ${repo} | awk '{print $1;}')

if [ "$upstream" ]; then
  if [ "$branch" == "master" ]; then
    echo
    echo -e "On branch ${g}master${nc} | upstream: ${p}${upstream}${nc}"
    echo
  else
    echo
    echo -e "On branch ${y}${branch}${nc} | upstream: ${p}${upstream}${nc}"
    echo
  fi
else
  echo
  echo -e "${r}Error: ${y}$repo ${r}not found! ${nc}Please, add a correct repository and try again."
  echo
  exit 1
fi

## STEP 3: exit if there are local changes to stash
if [ "$(git status -s)" ]; then
  echo
  echo -e "${r}Error: Local changes detected!${nc} Please, stash them before rebasing."
  echo
  exit 1
fi

## STEP 4: git checkout master if on another branch
if [ "$branch" != "master" ]; then
  echo -e "${c}----------------------------------------------------------------${nc}"
  echo -e "${g}$user_host ${b}$current_dir $ ${y}git checkout master${nc}"

  git checkout master

  echo
fi

## STEP 5: git fetch upstream (as master)
echo -e "${c}----------------------------------------------------------------${nc}"
echo -e "${g}$user_host ${b}$current_dir $ ${y}git fetch ${upstream}${nc}"

git fetch ${upstream}

echo

## STEP 6: git rebase upstream/master
echo -e "${c}----------------------------------------------------------------${nc}"
echo -e "${g}$user_host ${b}$current_dir $ ${y}git rebase ${upstream}/master${nc}"

git rebase ${upstream}/master

echo

## STEP 7: git checkout to the prev branch before fetch
if [ "$branch" != "master" ]; then
  echo -e "${c}----------------------------------------------------------------${nc}"
  echo -e "${g}$user_host ${b}$current_dir $ ${y}git checkout $branch${nc}"
  
  git checkout $branch

  echo
  
  ## STEP 8: git rebase master (as branch)
  echo -e "${c}----------------------------------------------------------------${nc}"
  echo -e "${g}$user_host ${b}$current_dir $ ${y}git rebase master${nc}"
  
  git rebase master
  
  echo
fi
